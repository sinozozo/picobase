import{_ as s,c as i,o as a,a3 as e}from"./chunks/framework.CiERAXBW.js";const n="/assets/main-page.WndyVVY-.png",t="/assets/todo-create-page.BETq6_aB.png",y=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started.md","filePath":"guide/getting-started.md","lastUpdated":1720502811000}'),l={name:"guide/getting-started.md"},p=e(`<h1 id="getting-started" tabindex="-1">快速开始 <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;快速开始 {#getting-started}&quot;">​</a></h1><h2 id="installation" tabindex="-1">安装 <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;安装 {#installation}&quot;">​</a></h2><h3 id="prerequisites" tabindex="-1">前置准备 <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;前置准备 {#prerequisites}&quot;">​</a></h3><ul><li>项目需采用 Spring Boot 2.x 作为基础</li></ul><p>Spring Boot 3.x 版本，适配中 ...</p><h3 id="setup-wizard" tabindex="-1">安装向导 <a class="header-anchor" href="#setup-wizard" aria-label="Permalink to &quot;安装向导 {#setup-wizard}&quot;">​</a></h3><p>用户可以使用 <a href="https://start.spring.io/" target="_blank" rel="noreferrer">Spring Initializr</a> 快速构建 Spring Boot 项目,然后引入 PicoBase 的 Maven 或 Gradle 依赖。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-cM6fW" id="tab-HSo9zz7" checked><label for="tab-HSo9zz7">Maven</label><input type="radio" name="group-cM6fW" id="tab-D0gq4Ij"><label for="tab-D0gq4Ij">Gradle</label></div><div class="blocks"><div class="language-xml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">//TODO 待补充, 请先自行clone代码构建并引入</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">//TODO 待补充, 请先自行clone代码构建并引入</span></span></code></pre></div></div></div><p>数据源配置：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  datasource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    driver-class-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 请更换为自己的mysql账号</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxxx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 请更换为自己的mysql密码</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jdbc:mysql://...:3306/xxx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 请更换为自己的mysql链接地址</span></span></code></pre></div><p>PicoBase 配置(可选)：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># PicoBase 配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">picobase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 是否打印日志</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  isLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 是否打印 banner</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  isPrint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # jwt 秘钥</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  jwtSecretKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">X8yXwWJE1k5zN7h+fP8g1U8QmW6i8LrQ4+QJyB2p6EU=</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pb-console</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  ## 是否需要登录认证 ， true 需要， false 不需要</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  identity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">admin@picobase.cn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">admin@picobase.cn</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # dev 模式，打印sql日志，存储http执行信息到数据库中， 开启后会影响执行性能</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  isDev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">关于 Mysql 账号权限</p><p>PicoBase 在启动和配置 Collection 时需要执行 DDL 语句，所以分配的 mysql 账号需具备 DDL 权限。</p></div><h2 id="start-project" tabindex="-1">启动项目 <a class="header-anchor" href="#start-project" aria-label="Permalink to &quot;启动项目 {#start-project}&quot;">​</a></h2><p>完成以上配置即可启动项目（Spring boot 的启动 main 函数）。启动成功后</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">┌─┐┬┌─┐┌─┐┌┐ ┌─┐┌─┐┌─┐</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─┘││  │ │├┴┐├─┤└─┐├┤ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">┴  ┴└─┘└─┘└─┘┴ ┴└─┘└─┘ v0.0.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> http://www.picobase.cn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PB [INFO] --&gt;: [thread-1] 全局配置 PbConfig{cookie=SaCookieConfig [domain=null, path=null, secure=false, httpOnly=false, sameSite=null], s3=S3Config{enable=true, endpoint=&#39;null&#39;, bucket=&#39;picobase&#39;, region=&#39;null&#39;, accessKey=&#39;null&#39;, secretKey=&#39;null&#39;, forcePathStyle=true}, tokenName=&#39;Authorization&#39;, timeout=2592000, activeTimeout=-1, isConcurrent=true, dynamicActiveTimeout=false, isShare=true, maxLoginCount=12, maxTryTimes=12, isReadBody=true, isReadHeader=true, isReadCookie=true, isWriteHeader=false, tokenStyle=&#39;uuid&#39;, autoRenew=true, tokenPrefix=&#39;null&#39;, tokenSessionCheckLogin=true, isPrint=true, isLog=true, isColorLog=true, logLevelInt=1, currDomain=&#39;null&#39;, dataRefreshPeriod=30, basic=&#39;&#39;, jwtSecretKey=&#39;X8yXwWJE1k5zN7h+fP8g1U8QmW6i8LrQ4+QJyB2p6EU=&#39;} </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">....</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2024-07-05 14:36:09.008  INFO 78016 --- [           main] com.picobase.StartUpApplication          : Started StartUpApplication in 2.814 seconds (JVM running for 3.678)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PB [INFO] --&gt;: [thread-1] Initializing PB System Tables ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2024-07-05 14:36:09.026  INFO 78016 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2024-07-05 14:36:09.408  INFO 78016 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PB [DEBUG]--&gt;: [thread-1] [501ms] [[{&quot;executeNo&quot;:0,&quot;sql&quot;:&quot;create table if not exists pb_admin\\n(\\n    id              char(20)      not null\\n        primary key,\\n    avatar          int default 0 not null,\\n    email           varchar(100)  not null,\\n    tokenKey        varchar(100) ...: true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PB [DEBUG]--&gt;: [thread-1] [65ms] [&quot;SELECT * FROM \`pb_collection\` WHERE id=:id&quot;,{&quot;id&quot;:&quot;_pb_users_auth_&quot;},&quot;com.picobase.model.CollectionModel&quot;]: CollectionModel{name=&#39;users&#39;, type=&#39;auth&#39;}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PB [DEBUG]--&gt;: [thread-1] [10ms] [&quot;SELECT * FROM \`pb_collection\` WHERE id=:id&quot;,{&quot;id&quot;:&quot;_pb_log_&quot;},&quot;com.picobase.model.CollectionModel&quot;]: CollectionModel{name=&#39;pb_log&#39;, type=&#39;base&#39;}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PB [DEBUG]--&gt;: [thread-1] [20ms] [[]]: true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">启动成功：PicoBase配置如下：PbConsoleConfig{auth=true, identity=&#39;admin@admin.com&#39;, password=&#39;admin@admin.com&#39;, include=&#39;/**&#39;, exclude=&#39;&#39;, isDev=true, s3Config=null, dataDirPath=&#39;/Users/zouqiang/Documents/IdeaProjects/java-projects/pico/pb_data/storage&#39;}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2024-07-05 14:36:10.125  INFO 78016 --- [on(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2024-07-05 14:36:10.125  INFO 78016 --- [on(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet &#39;dispatcherServlet&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2024-07-05 14:36:10.126  INFO 78016 --- [on(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms</span></span></code></pre></div><p>访问 <code>http://localhost:8080/console/</code> 即可访问 PicoBase 的控制台， 注意最后一个 <code>/</code> 是必须的。</p><p>首次登录，在登录界面中输入配置文件中的identity和password配置（我这里是 <a href="mailto:admin@picobase.cn" target="_blank" rel="noreferrer">admin@picobase.cn</a> 和 <a href="mailto:admin@picobase.cn" target="_blank" rel="noreferrer">admin@picobase.cn</a>） 即可登录。</p><p>登录后主页如下：</p><p><img src="`+n+'" alt="main-page.png"></p><div class="tip custom-block"><p class="custom-block-title">系统启动</p><p>系统启动后会检查 mysql 中是否包含 Picobase 的系统表（pb_collection、pb_admin、pb_log），如果没有则会自动创建。</p></div><h2 id="create-a-demo-project" tabindex="-1">创建第一个 Demo 项目 <a class="header-anchor" href="#create-a-demo-project" aria-label="Permalink to &quot;创建第一个 Demo 项目 {#create-a-demo-project}&quot;">​</a></h2><p>假设我们要实现一个 TODO List 的用户任务管理的功能， 用于为外部提供接口 TODO 管理的接口。首先我们要创建一个 Todo <a href="./collection">collection</a>(picobase 中的数据模型对应数据库中的表)。 该 Todo collection 应包含 <code>taskName</code> , <code>taskContent</code> ,<code>user</code>,<code>isCompleted</code> 四个字段。 其中 <code>user</code> 字段用于表述当前任务属于哪个用户。</p><p>点击左侧的 <code>+ New Collection</code> 按钮， 便可打开一个 <code>Todo</code> collection 的页面。</p><p><img src="'+t+'" alt="todo-create-page.png"></p><p>注意 <code>user</code> 字段， 这里选择 <code>relation</code> 类型，并关联了系统创建的 <code>users</code> collection， 从而实现了 <code>user</code> 字段的关联。<code>isCompleted</code> 字段用于表述当前任务是否完成，这里为了演示，直接存储为中文文本值。</p><p>至此，这个 Todo 接口就算开发完成了 🎉🎉🎉。</p><p>接口的使用文档可以点击打开 Todo collection 右侧 <code>Api preview</code> 页面。也可以在该控制台中手动执行这些接口的调用，所有调用信息均可在 <code>Logs</code> 菜单中查看。</p><h2 id="advanced-usage" tabindex="-1">进阶用法 <a class="header-anchor" href="#advanced-usage" aria-label="Permalink to &quot;进阶用法 {#advanced-usage}&quot;">​</a></h2><p>PicoBase 跟传统脚手架项目不同，其运行过程中并没有生成额外代码。</p><p>基于 collection 元数据和动态 sql 构建实现，PicoBase 支持复杂的正向反向级联查询，详见 <a href="./api-rules-and-filters">API 访问规则和过滤</a>。</p><p>一些访问示例：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 访问 Todo collection  的第一页数据， 按照 `user.name` 字段进行过滤  ~ 表示模糊匹配， = 表示绝对匹配， `isComplated = &#39;已完成&#39;` 过滤</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 执行日志-&gt;[&quot;SELECT DISTINCT `Todo`.* FROM `Todo` LEFT JOIN `users` `Todo_user` ON Todo_user.id = Todo.user WHERE (Todo_user.name LIKE :tl1xpJ AND Todo.isComplated = :t2O4Q6) LIMIT 1&quot;,{&quot;tl1xpJ&quot;:&quot;%三%&quot;,&quot;t2O4Q6&quot;:&quot;已完成&quot;},{}]: List&lt;RecordModel&gt; size:1 </span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /api/collections/Todo/records?page=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;perPage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">user.name</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;三&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isComplated</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;已完成&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;fields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">id</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查询今天存在Todo 未完成的用户Collection（反向查询）</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /api/collections/users/records?page=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;perPage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-created</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;skipTotal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Todo_via_user.isComplated</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;未完成&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Todo_via_user.created</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @todayEnd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;expand</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;fields</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span></span></code></pre></div>',33),h=[p];function o(k,r,d,c,E,g){return a(),i("div",null,h)}const m=s(l,[["render",o]]);export{y as __pageData,m as default};
